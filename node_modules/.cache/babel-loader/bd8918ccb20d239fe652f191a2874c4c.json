{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\src\\\\App.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  header {\\n    display: flex;\\n\\n    div {\\n      padding: 1rem;\\n    }\\n\\n    span {\\n      vertical-align: super;\\n    }\\n\\n    svg {\\n      padding-right: 1rem;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\"; // router\n\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\"; // css\n\nimport { css } from \"emotion\"; // components\n\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport MessageBoard from \"./components/MessageBoard\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport Account from \"./components/Account\"; //{}\n//[]\n//||\n// version 1.\n// Form validation\n// Storage of encrypted passwords\n// Done: Secure storage of user data in localstorage\n// cors policy\n// profileimages. Can be a svg temporarily\n// Github repository\n// Profile image gif\n// Version 2.\n// Implement redux as state managaer\n// Bug ved refresh, når man ikke er logget ind -> cleary\n\nvar App = function App() {\n  var baseUrl = \"http://localhost:5000/api\";\n  var initIsAuthed = JSON.parse(localStorage.getItem(\"isAuthed\") || false);\n  var initProfileName = localStorage.getItem(\"profileName\");\n\n  var _useState = useState({\n    isAuthed: initIsAuthed,\n    profileName: initProfileName\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      authed = _useState2[0],\n      setAuthed = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessageCreateAccount = _useState4[0],\n      setErrorMessageCreateAccount = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessageAuthentication = _useState6[0],\n      setErrorMessageAuthentication = _useState6[1];\n\n  useEffect(function () {\n    localStorage.setItem(\"isAuthed\", authed.isAuthed);\n    localStorage.setItem(\"profileName\", authed.profileName);\n  }, [authed]);\n\n  var handleAuthentication =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(validLogin, userName, password) {\n      var reqUrl, _ref2, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!(validLogin === false)) {\n                _context.next = 5;\n                break;\n              }\n\n              setAuthed({\n                isAuthed: false,\n                authedProfile: undefined\n              });\n              _context.next = 12;\n              break;\n\n            case 5:\n              if (!(validLogin === true && userName && password)) {\n                _context.next = 12;\n                break;\n              }\n\n              reqUrl = \"\".concat(baseUrl, \"/auth/\").concat(userName);\n              _context.next = 9;\n              return axios.get(reqUrl);\n\n            case 9:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              setAuthed({\n                isAuthed: true,\n                profileName: data.name\n              });\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              setErrorMessageAuthentication(\"Ups ... noget gik galt. Prøv igen eller kontakt din administrator.\");\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 14]]);\n    }));\n\n    return function handleAuthentication(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleLogOut = function handleLogOut(evt) {\n    evt.preventDefault();\n    setAuthed({\n      isAuthed: false,\n      profileName: undefined\n    });\n  };\n\n  var handleCreateAccount =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(newAccount) {\n      var reqUrl, _ref4, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              reqUrl = \"\".concat(baseUrl, \"/profiles\");\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post(reqUrl, newAccount);\n\n            case 4:\n              _ref4 = _context2.sent;\n              data = _ref4.data;\n              _context2.next = 8;\n              return handleAuthentication(true, data.name, \"dfgfdgfdg\");\n\n            case 8:\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n              setErrorMessageCreateAccount(\"Ups ... noget gik galt. Prøv igen eller kontakt din administrator.\");\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 10]]);\n    }));\n\n    return function handleCreateAccount(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: container(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Header, {\n    authed: authed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Main, {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/account\",\n    render: function render(props) {\n      return React.createElement(Account, Object.assign({}, props, {\n        authed: authed,\n        setAuthed: handleAuthentication,\n        createAccount: handleCreateAccount,\n        handleLogOut: handleLogOut,\n        baseUrl: baseUrl,\n        errorMessageCreateAccount: errorMessageCreateAccount,\n        errorMessageAuthentication: errorMessageAuthentication,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/profile/:id\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/messages\",\n    render: function render(props) {\n      return React.createElement(MessageBoard, Object.assign({}, props, {\n        authed: authed,\n        isAuthed: authed.isAuthed,\n        authedProfile: authed.profileName,\n        baseUrl: baseUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/frontpage\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/profile/:id\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    render: function render() {\n      return React.createElement(Redirect, {\n        to: \"/frontpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))));\n};\n\nvar container = function container() {\n  return css(_templateObject());\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ToEcho\\Desktop\\message_board\\message_board_app\\src\\App.jsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Redirect","Switch","css","axios","Header","Main","MessageBoard","Home","Profile","Account","App","baseUrl","initIsAuthed","JSON","parse","localStorage","getItem","initProfileName","isAuthed","profileName","authed","setAuthed","undefined","errorMessageCreateAccount","setErrorMessageCreateAccount","errorMessageAuthentication","setErrorMessageAuthentication","setItem","handleAuthentication","validLogin","userName","password","authedProfile","reqUrl","get","data","name","console","log","handleLogOut","evt","preventDefault","handleCreateAccount","newAccount","post","container","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// router\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\n// css\r\nimport { css } from \"emotion\";\r\n// components\r\nimport axios from \"axios\";\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport MessageBoard from \"./components/MessageBoard\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport Account from \"./components/Account\";\r\n\r\n//{}\r\n//[]\r\n//||\r\n\r\n// version 1.\r\n// Form validation\r\n// Storage of encrypted passwords\r\n// Done: Secure storage of user data in localstorage\r\n// cors policy\r\n// profileimages. Can be a svg temporarily\r\n// Github repository\r\n// Profile image gif\r\n\r\n// Version 2.\r\n// Implement redux as state managaer\r\n\r\n// Bug ved refresh, når man ikke er logget ind -> cleary\r\n\r\nconst App = () => {\r\n  const baseUrl = `http://localhost:5000/api`;\r\n  let initIsAuthed = JSON.parse(localStorage.getItem(\"isAuthed\") || false);\r\n  let initProfileName = localStorage.getItem(\"profileName\");\r\n  const [authed, setAuthed] = useState({\r\n    isAuthed: initIsAuthed,\r\n    profileName: initProfileName\r\n  });\r\n  const [errorMessageCreateAccount, setErrorMessageCreateAccount] = useState(\r\n    undefined\r\n  );\r\n  const [errorMessageAuthentication, setErrorMessageAuthentication] = useState(\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"isAuthed\", authed.isAuthed);\r\n    localStorage.setItem(\"profileName\", authed.profileName);\r\n  }, [authed]);\r\n\r\n  const handleAuthentication = async (validLogin, userName, password) => {\r\n    try {\r\n      if (validLogin === false) {\r\n        setAuthed({ isAuthed: false, authedProfile: undefined });\r\n      } else if (validLogin === true && userName && password) {\r\n        const reqUrl = `${baseUrl}/auth/${userName}`;\r\n        let { data } = await axios.get(reqUrl);\r\n        setAuthed({ isAuthed: true, profileName: data.name });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setErrorMessageAuthentication(\r\n        \"Ups ... noget gik galt. Prøv igen eller kontakt din administrator.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLogOut = evt => {\r\n    evt.preventDefault();\r\n    setAuthed({ isAuthed: false, profileName: undefined });\r\n  };\r\n\r\n  const handleCreateAccount = async newAccount => {\r\n    const reqUrl = `${baseUrl}/profiles`;\r\n\r\n    try {\r\n      let { data } = await axios.post(reqUrl, newAccount);\r\n      //console.log(data);\r\n      await handleAuthentication(true, data.name, \"dfgfdgfdg\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      setErrorMessageCreateAccount(\r\n        \"Ups ... noget gik galt. Prøv igen eller kontakt din administrator.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={container()}>\r\n        <Header authed={authed} />\r\n        <Main className=\"main\">\r\n          <Switch>\r\n            <Route\r\n              path=\"/account\"\r\n              render={props => (\r\n                <Account\r\n                  {...props}\r\n                  authed={authed}\r\n                  setAuthed={handleAuthentication}\r\n                  createAccount={handleCreateAccount}\r\n                  handleLogOut={handleLogOut}\r\n                  baseUrl={baseUrl}\r\n                  errorMessageCreateAccount={errorMessageCreateAccount}\r\n                  errorMessageAuthentication={errorMessageAuthentication}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/profile/:id\" component={Profile} />\r\n            <Route\r\n              path=\"/messages\"\r\n              render={props => (\r\n                <MessageBoard\r\n                  {...props}\r\n                  authed={authed}\r\n                  isAuthed={authed.isAuthed}\r\n                  authedProfile={authed.profileName}\r\n                  baseUrl={baseUrl}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path=\"/frontpage\" component={Home} />\r\n            <Route path=\"/profile/:id\" component={Profile} />\r\n            <Route path=\"/\" render={() => <Redirect to=\"/frontpage\" />} />\r\n          </Switch>\r\n        </Main>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst container = () => css`\r\n  header {\r\n    display: flex;\r\n\r\n    div {\r\n      padding: 1rem;\r\n    }\r\n\r\n    span {\r\n      vertical-align: super;\r\n    }\r\n\r\n    svg {\r\n      padding-right: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}