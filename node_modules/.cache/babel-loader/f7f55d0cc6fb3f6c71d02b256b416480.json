{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ToEcho\\\\Desktop\\\\message_board\\\\message_board_app\\\\src\\\\components\\\\MessageBoard.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .list {\\n    margin-top: 1rem;\\n\\n    .message {\\n      padding-top: 1rem;\\n      border: 1px solid #4877E5;\\n      border-radius: 10px;\\n    \\n      .header {\\n        display: flex; \\n\\n        .user-date {\\n          font-size: 0.8rem;\\n          color: darkgray;\\n        }\\n  \\n        svg {\\n          padding: 0.25rem 1rem 0 1rem;\\n          height: 2rem;\\n          width: 2rem;\\n        }\\n\\n        p {\\n          margin:0;\\n        }\\n      }\\n\\n      .body  {\\n        padding: 0.5rem 0 1rem 4rem;\\n      }\\n    }\\n\\n  }\\n\\n  .validation-text {\\n    padding: 1rem 0 1rem 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport TextArea from \"./ui/TextArea\";\nimport FormButton from \"./ui/FormButton\";\nimport Warning from \"./ui/Warning\";\nimport axios from \"axios\"; //css\n\nimport { css } from \"emotion\";\nimport { SendIcon, AccountIcon } from \"mdi-react\";\n\nvar MessageBoard = function MessageBoard(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1]; //const [post, setPost] = useState({});\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var timer; // componentDidMount\n\n  useEffect(function () {\n    getPosts();\n  }, []); // componentWillUnmount\n\n  useEffect(function () {\n    return function () {\n      clearTimeout(timer); // to avoid memory leaks\n    };\n  }, []); // call this function every 30 seconds\n\n  var getPosts =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var reqUrl, _ref2, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              reqUrl = \"\".concat(props.baseUrl, \"/posts\");\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(reqUrl);\n\n            case 4:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              setPosts(data);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n              _context.prev = 12;\n              timer = setTimeout(function () {\n                getPosts();\n              }, 10000);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 9, 12, 15]]);\n    }));\n\n    return function getPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleFormChange = function handleFormChange(e) {\n    e.preventDefault();\n    setMessage(e.target.value);\n  };\n\n  var handlePostSubmit = function handlePostSubmit(e) {\n    if (message.length > 0) {\n      var accountName = props.account.name ? props.account.name : \"Ukendt bruger\";\n      var post = {\n        profileName: accountName,\n        message: message\n      };\n      sendPost(post);\n    }\n  }; // try catch mangler her\n\n\n  var sendPost =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(post) {\n      var reqUrl, _ref4, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              reqUrl = \"\".concat(props.baseUrl, \"/post\");\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post(reqUrl, post);\n\n            case 4:\n              _ref4 = _context2.sent;\n              data = _ref4.data;\n              setPosts(data);\n              setMessage(\"\");\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 10]]);\n    }));\n\n    return function sendPost(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: container(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Warning, {\n    validationText: \"Adgagnskode mangler at blive udfyldt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Skriv en besked\"), React.createElement(TextArea, {\n    initText: \"Skriv en besked\",\n    handleChange: handleFormChange,\n    value: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(FormButton, {\n    label: React.createElement(React.Fragment, null, React.createElement(SendIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" Send \"),\n    style: {\n      marginTop: \"1rem\"\n    },\n    handleSubmit: function handleSubmit(e) {\n      return handlePostSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, posts.length > 0 && _toConsumableArray(posts).reverse().map(function (obj, index) {\n    return React.createElement(\"div\", {\n      className: \"message\",\n      key: index,\n      style: {\n        marginTop: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(AccountIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"user-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, obj.profileName !== \"undefined\" || undefined ? obj.profileName : \"Ukendt bruger\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, obj.dateTime))), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, obj.message));\n  })));\n};\n\nvar container = function container() {\n  return css(_templateObject());\n};\n\nexport default MessageBoard;","map":{"version":3,"sources":["C:\\Users\\ToEcho\\Desktop\\message_board\\message_board_app\\src\\components\\MessageBoard.jsx"],"names":["React","Component","useEffect","useState","TextArea","FormButton","Warning","axios","css","SendIcon","AccountIcon","MessageBoard","props","posts","setPosts","message","setMessage","timer","getPosts","clearTimeout","reqUrl","baseUrl","get","data","console","log","setTimeout","handleFormChange","e","preventDefault","target","value","handlePostSubmit","length","accountName","account","name","post","profileName","sendPost","container","marginTop","reverse","map","obj","index","undefined","dateTime"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport TextArea from \"./ui/TextArea\";\r\nimport FormButton from \"./ui/FormButton\";\r\nimport Warning from \"./ui/Warning\";\r\nimport axios from \"axios\";\r\n\r\n//css\r\nimport { css } from \"emotion\";\r\nimport { SendIcon, AccountIcon } from \"mdi-react\";\r\n\r\nconst MessageBoard = props => {\r\n  const [posts, setPosts] = useState([]);\r\n  //const [post, setPost] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  let timer; \r\n  \r\n  // componentDidMount\r\n  useEffect(() => {\r\n    getPosts();\r\n  },[]);\r\n\r\n  // componentWillUnmount\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer) // to avoid memory leaks\r\n    }\r\n  },[])\r\n\r\n  // call this function every 30 seconds\r\n  const getPosts =  async () => {\r\n    const reqUrl = `${props.baseUrl}/posts`;\r\n    try {\r\n      let { data } = await axios.get(reqUrl);\r\n      setPosts(data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    finally {\r\n      timer = setTimeout(() => {\r\n        getPosts();\r\n      }, 10000); \r\n    }\r\n  };\r\n\r\n  const handleFormChange = e => {\r\n    e.preventDefault();\r\n    setMessage(e.target.value);\r\n  };  \r\n  \r\n  const handlePostSubmit = e => {\r\n    if (message.length > 0) {\r\n      const accountName = props.account.name ? props.account.name: \"Ukendt bruger\"\r\n      const post = { profileName: accountName, message };\r\n      sendPost(post);\r\n    }\r\n  };\r\n\r\n  // try catch mangler her\r\n  const sendPost = async post => {\r\n    const reqUrl = `${props.baseUrl}/post`;\r\n    try {\r\n      let { data } = await axios.post(reqUrl, post)\r\n      setPosts(data)\r\n      setMessage(\"\")\r\n    } \r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={container()}>\r\n      <Warning validationText={\"Adgagnskode mangler at blive udfyldt\"}/>\r\n       {/* Form */}\r\n       <form>\r\n          <h2>Skriv en besked</h2>\r\n          <TextArea\r\n            initText=\"Skriv en besked\"\r\n            handleChange={handleFormChange}\r\n            value={message}\r\n          />\r\n          <FormButton\r\n            label={<><SendIcon /> Send </>}\r\n            style={{ marginTop: \"1rem\" }}\r\n            handleSubmit={e => handlePostSubmit(e)}\r\n          />\r\n        </form>\r\n        {/* MessageList */}\r\n        <div className=\"list\">\r\n            {posts.length > 0 &&\r\n              [...posts].reverse().map((obj, index) => (\r\n                <div className=\"message\" key={index} style={{ marginTop: \"1rem\" }}>\r\n                  <div className=\"header\">\r\n                    <div>\r\n                      <AccountIcon/>\r\n                    </div>\r\n                    <div className=\"user-date\">\r\n                      <p>{obj.profileName !== \"undefined\" || undefined ? obj.profileName: \"Ukendt bruger\"}</p>\r\n                      <p>{obj.dateTime}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"body\">\r\n                    {obj.message}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst container = () => css`\r\n  .list {\r\n    margin-top: 1rem;\r\n\r\n    .message {\r\n      padding-top: 1rem;\r\n      border: 1px solid #4877E5;\r\n      border-radius: 10px;\r\n    \r\n      .header {\r\n        display: flex; \r\n\r\n        .user-date {\r\n          font-size: 0.8rem;\r\n          color: darkgray;\r\n        }\r\n  \r\n        svg {\r\n          padding: 0.25rem 1rem 0 1rem;\r\n          height: 2rem;\r\n          width: 2rem;\r\n        }\r\n\r\n        p {\r\n          margin:0;\r\n        }\r\n      }\r\n\r\n      .body  {\r\n        padding: 0.5rem 0 1rem 4rem;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  .validation-text {\r\n    padding: 1rem 0 1rem 0;\r\n  }\r\n`;\r\n\r\nexport default MessageBoard;\r\n"]},"metadata":{},"sourceType":"module"}